name: Flutter SDK CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  analyze:
    name: Code Analysis & Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Run static analysis with strict rules
        run: flutter analyze --fatal-infos --fatal-warnings
      
      - name: Check for outdated dependencies
        run: flutter pub outdated --show-all --no-dev-dependencies

  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    needs: analyze
    strategy:
      matrix:
        flutter-version: ['3.24.x', '3.27.x']
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter ${{ matrix.flutter-version }}
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests with coverage
        run: flutter test --coverage --test-randomize-ordering-seed random --reporter expanded
      
      - name: Verify coverage threshold
        run: |
          # Install lcov tools
          sudo apt-get update
          sudo apt-get install -y lcov
          
          # Generate coverage report
          lcov --summary coverage/lcov.info
          
          # Check coverage percentage (targeting 100%)
          COVERAGE=$(lcov --summary coverage/lcov.info 2>&1 | grep "lines" | awk '{print $2}' | sed 's/%//')
          echo "Code Coverage: $COVERAGE%"
          
          # Fail if coverage is below 80% (will increase to 100% as tests are added)
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Coverage $COVERAGE% is below required 80%"
            exit 1
          fi
          echo "✅ Coverage $COVERAGE% meets requirement"
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.flutter-version == '3.24.x'
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-flutter-sdk
      
      - name: Generate HTML coverage report
        if: matrix.flutter-version == '3.24.x'
        run: |
          sudo apt-get install -y lcov
          genhtml coverage/lcov.info -o coverage/html
      
      - name: Upload HTML coverage report
        if: matrix.flutter-version == '3.24.x'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/html
          retention-days: 30

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run integration tests
        run: flutter test test/integration --reporter expanded || true

  publish-dry-run:
    name: Package Publishing Check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify package structure
        run: |
          echo "Checking package structure..."
          test -f pubspec.yaml || exit 1
          test -f README.md || exit 1
          test -f CHANGELOG.md || exit 1
          test -f LICENSE || exit 1
          test -d lib || exit 1
          echo "✅ Package structure is valid"
      
      - name: Verify package can be published
        run: dart pub publish --dry-run
      
      - name: Check package score
        run: |
          flutter pub get
          dart pub global activate pana
          dart pub global run pana --no-warning --json > pana_report.json || true
          cat pana_report.json
      
      - name: Upload package analysis
        uses: actions/upload-artifact@v4
        with:
          name: pana-report
          path: pana_report.json
          retention-days: 30

  security-scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Check for known vulnerabilities
        run: flutter pub upgrade --dry-run
      
      - name: Verify no TODO/FIXME in production code
        run: |
          # Allow TODO in tests but not in lib/
          if grep -r "TODO\|FIXME" lib/; then
            echo "❌ Found TODO/FIXME in production code"
            exit 1
          fi
          echo "✅ No TODO/FIXME found in production code"
